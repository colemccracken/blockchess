/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Chess, ChessInterface } from "../Chess";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "color",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "move",
        type: "string",
      },
    ],
    name: "Move",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "NewGame",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blackMovesMapping",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "getPGN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_color",
        type: "string",
      },
      {
        internalType: "string",
        name: "_move",
        type: "string",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whiteMovesMapping",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061174d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806332dc47d3146100675780637255d72914610097578063a87d942c146100a1578063cc09ccc2146100bf578063ed5091d6146100db578063eecfbe841461010b575b600080fd5b610081600480360381019061007c9190610f10565b61013b565b60405161008e9190610fd6565b60405180910390f35b61009f610423565b005b6100a9610560565b6040516100b69190611007565b60405180910390f35b6100d960048036038101906100d49190611157565b610571565b005b6100f560048036038101906100f091906111e2565b610864565b6040516101029190610fd6565b60405180910390f35b610125600480360381019061012091906111e2565b61091d565b6040516101329190610fd6565b60405180910390f35b60606000806000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561021d57838290600052602060002001805461019090611251565b80601f01602080910402602001604051908101604052809291908181526020018280546101bc90611251565b80156102095780601f106101de57610100808354040283529160200191610209565b820191906000526020600020905b8154815290600101906020018083116101ec57829003601f168201915b505050505081526020019060010190610171565b505050509050600060016000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561030457838290600052602060002001805461027790611251565b80601f01602080910402602001604051908101604052809291908181526020018280546102a390611251565b80156102f05780601f106102c5576101008083540402835291602001916102f0565b820191906000526020600020905b8154815290600101906020018083116102d357829003601f168201915b505050505081526020019060010190610258565b505050509050600060405180602001604052806000815250905060005b835181101561041757600061036c82866040518060400160405280600581526020017f77686974650000000000000000000000000000000000000000000000000000008152506109d6565b905082816040516020016103819291906112bf565b6040516020818303038152906040529250845184511415610403576103dc82856040518060400160405280600581526020017f626c61636b0000000000000000000000000000000000000000000000000000008152506109d6565b905082816040516020016103f19291906112bf565b60405160208183030381529060405292505b50808061040f90611312565b915050610321565b50809350505050919050565b600061042f6002610ae6565b90508067ffffffffffffffff81111561044b5761044a61102c565b5b60405190808252806020026020018201604052801561047e57816020015b60608152602001906001900390816104695790505b5060008083815260200190815260200160002090805190602001906104a4929190610d5f565b508067ffffffffffffffff8111156104bf576104be61102c565b5b6040519080825280602002602001820160405280156104f257816020015b60608152602001906001900390816104dd5790505b50600160008381526020019081526020016000209080519060200190610519929190610d5f565b506105246002610af4565b7fb4ab36f4d2fee8698466065c4ee831b4748994cdd8de1c10a834a1d9b9452337813360405161055592919061139c565b60405180910390a150565b600061056c6002610ae6565b905090565b60008060008581526020019081526020016000209050600060016000868152602001908152602001600020905061074982805480602002602001604051908101604052809291908181526020016000905b8282101561066e5783829060005260206000200180546105e190611251565b80601f016020809104026020016040519081016040528092919081815260200182805461060d90611251565b801561065a5780601f1061062f5761010080835404028352916020019161065a565b820191906000526020600020905b81548152906001019060200180831161063d57829003601f168201915b5050505050815260200190600101906105c2565b5050505082805480602002602001604051908101604052809291908181526020016000905b8282101561073f5783829060005260206000200180546106b290611251565b80601f01602080910402602001604051908101604052809291908181526020018280546106de90611251565b801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b505050505081526020019060010190610693565b5050505086610b0a565b61075257600080fd5b60405160200161076190611411565b60405160208183030381529060405280519060200120846040516020016107889190611426565b6040516020818303038152906040528051906020012014156107e45781839080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906107de929190610dbf565b50610820565b808390806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061081e929190610dbf565b505b7f35d41c6cb44f272e2202eedbedc22b1a1764194706216529eca16382511217cc85338686604051610855949392919061143d565b60405180910390a15050505050565b6001602052816000526040600020818154811061088057600080fd5b9060005260206000200160009150915050805461089c90611251565b80601f01602080910402602001604051908101604052809291908181526020018280546108c890611251565b80156109155780601f106108ea57610100808354040283529160200191610915565b820191906000526020600020905b8154815290600101906020018083116108f857829003601f168201915b505050505081565b6000602052816000526040600020818154811061093957600080fd5b9060005260206000200160009150915050805461095590611251565b80601f016020809104026020016040519081016040528092919081815260200182805461098190611251565b80156109ce5780601f106109a3576101008083540402835291602001916109ce565b820191906000526020600020905b8154815290600101906020018083116109b157829003601f168201915b505050505081565b606060006040518060200160405280600081525090506040516020016109fb90611411565b6040516020818303038152906040528051906020012083604051602001610a229190611426565b604051602081830303815290604052805190602001201415610a7b576000600186610a4d9190611490565b9050610a5881610b20565b604051602001610a689190611532565b6040516020818303038152906040529150505b600081858781518110610a9157610a90611554565b5b6020026020010151604051602001610aaa9291906112bf565b604051602081830303815290604052905080604051602001610acc91906115cf565b604051602081830303815290604052925050509392505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6000610b17848484610c81565b90509392505050565b60606000821415610b68576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610c7c565b600082905060005b60008214610b9a578080610b8390611312565b915050600a82610b939190611620565b9150610b70565b60008167ffffffffffffffff811115610bb657610bb561102c565b5b6040519080825280601f01601f191660200182016040528015610be85781602001600182028036833780820191505090505b5090505b60008514610c7557600182610c019190611651565b9150600a85610c109190611685565b6030610c1c9190611490565b60f81b818381518110610c3257610c31611554565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610c6e9190611620565b9450610bec565b8093505050505b919050565b600082518451148015610cdd5750604051602001610c9e90611411565b6040516020818303038152906040528051906020012082604051602001610cc59190611426565b60405160208183030381529060405280519060200120145b15610ceb5760019050610d58565b82518451118015610d455750604051602001610d0690611702565b6040516020818303038152906040528051906020012082604051602001610d2d9190611426565b60405160208183030381529060405280519060200120145b15610d535760019050610d58565b600090505b9392505050565b828054828255906000526020600020908101928215610dae579160200282015b82811115610dad578251829080519060200190610d9d929190610dbf565b5091602001919060010190610d7f565b5b509050610dbb9190610e45565b5090565b828054610dcb90611251565b90600052602060002090601f016020900481019282610ded5760008555610e34565b82601f10610e0657805160ff1916838001178555610e34565b82800160010185558215610e34579182015b82811115610e33578251825591602001919060010190610e18565b5b509050610e419190610e69565b5090565b5b80821115610e655760008181610e5c9190610e86565b50600101610e46565b5090565b5b80821115610e82576000816000905550600101610e6a565b5090565b508054610e9290611251565b6000825580601f10610ea45750610ec3565b601f016020900490600052602060002090810190610ec29190610e69565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610eed81610eda565b8114610ef857600080fd5b50565b600081359050610f0a81610ee4565b92915050565b600060208284031215610f2657610f25610ed0565b5b6000610f3484828501610efb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f77578082015181840152602081019050610f5c565b83811115610f86576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fa882610f3d565b610fb28185610f48565b9350610fc2818560208601610f59565b610fcb81610f8c565b840191505092915050565b60006020820190508181036000830152610ff08184610f9d565b905092915050565b61100181610eda565b82525050565b600060208201905061101c6000830184610ff8565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61106482610f8c565b810181811067ffffffffffffffff821117156110835761108261102c565b5b80604052505050565b6000611096610ec6565b90506110a2828261105b565b919050565b600067ffffffffffffffff8211156110c2576110c161102c565b5b6110cb82610f8c565b9050602081019050919050565b82818337600083830152505050565b60006110fa6110f5846110a7565b61108c565b90508281526020810184848401111561111657611115611027565b5b6111218482856110d8565b509392505050565b600082601f83011261113e5761113d611022565b5b813561114e8482602086016110e7565b91505092915050565b6000806000606084860312156111705761116f610ed0565b5b600061117e86828701610efb565b935050602084013567ffffffffffffffff81111561119f5761119e610ed5565b5b6111ab86828701611129565b925050604084013567ffffffffffffffff8111156111cc576111cb610ed5565b5b6111d886828701611129565b9150509250925092565b600080604083850312156111f9576111f8610ed0565b5b600061120785828601610efb565b925050602061121885828601610efb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061126957607f821691505b6020821081141561127d5761127c611222565b5b50919050565b600081905092915050565b600061129982610f3d565b6112a38185611283565b93506112b3818560208601610f59565b80840191505092915050565b60006112cb828561128e565b91506112d7828461128e565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131d82610eda565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113505761134f6112e3565b5b600182019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113868261135b565b9050919050565b6113968161137b565b82525050565b60006040820190506113b16000830185610ff8565b6113be602083018461138d565b9392505050565b7f7768697465000000000000000000000000000000000000000000000000000000600082015250565b60006113fb600583611283565b9150611406826113c5565b600582019050919050565b600061141c826113ee565b9150819050919050565b6000611432828461128e565b915081905092915050565b60006080820190506114526000830187610ff8565b61145f602083018661138d565b81810360408301526114718185610f9d565b905081810360608301526114858184610f9d565b905095945050505050565b600061149b82610eda565b91506114a683610eda565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114db576114da6112e3565b5b828201905092915050565b7f2e20000000000000000000000000000000000000000000000000000000000000600082015250565b600061151c600283611283565b9150611527826114e6565b600282019050919050565b600061153e828461128e565b91506115498261150f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f2000000000000000000000000000000000000000000000000000000000000000600082015250565b60006115b9600183611283565b91506115c482611583565b600182019050919050565b60006115db828461128e565b91506115e6826115ac565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061162b82610eda565b915061163683610eda565b925082611646576116456115f1565b5b828204905092915050565b600061165c82610eda565b915061166783610eda565b92508282101561167a576116796112e3565b5b828203905092915050565b600061169082610eda565b915061169b83610eda565b9250826116ab576116aa6115f1565b5b828206905092915050565b7f626c61636b000000000000000000000000000000000000000000000000000000600082015250565b60006116ec600583611283565b91506116f7826116b6565b600582019050919050565b600061170d826116df565b915081905091905056fea264697066735822122049609b62a1b89b10a4622136450953b58848d4ea6cc9550de4559e5e09373a2564736f6c63430008090033";

type ChessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chess__factory extends ContractFactory {
  constructor(...args: ChessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chess> {
    return super.deploy(overrides || {}) as Promise<Chess>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Chess {
    return super.attach(address) as Chess;
  }
  connect(signer: Signer): Chess__factory {
    return super.connect(signer) as Chess__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChessInterface {
    return new utils.Interface(_abi) as ChessInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Chess {
    return new Contract(address, _abi, signerOrProvider) as Chess;
  }
}
